{"version":3,"sources":["Screens/HomeScreen.js","data.js","Screens/ProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["HomeScreen","props","useState","products","setProduct","useEffect","a","axios","get","data","fetchData","className","map","product","key","_id","to","src","image","alt","name","brand","price","rating","numReviews","category","ProductScreen","console","log","match","params","id","find","x","description","status","App","onClick","document","querySelector","classList","add","href","remove","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3715459b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nfunction HomeScreen(props){\n    const [products,setProduct]= useState([]);\n    useEffect(()=>{\n        const fetchData= async()=>{\n            const {data} =await axios.get(\"/api/products\");\n            setProduct(data);\n        }\n        fetchData();\n        return ()=>{\n            //\n        };\n    }, [])\n    return <ul className=\"products\">\n    {\n      products.map(product=>\n        <li key={product._id}>\n      <div className=\"product\">\n      <Link to={'/product/'+product._id}>\n      <img className=\"product-image\" src={product.image} alt=\"product\" />\n      </Link>\n        <div className=\"product-name\">\n          <Link to={'/product/'+product._id}>{product.name} </Link>\n        </div>\n        <div className=\"product-brand\">{product.brand} </div>\n        <div className=\"product-price\">${product.price} </div>\n        <div className=\"product-rating\">{product.rating}  Stars ({product.numReviews} Reviews)</div>\n      </div>\n    </li>)\n    }\n  </ul>\n}\nexport default HomeScreen;","export default{\n    products:[\n    {\n        _id:'1',\n        name: 'Slim Shirt',\n        category:'Shirts',\n        image:'/images/d1.jpeg',\n        price:60,\n        brand:'Nike',\n        rating:4.5,\n        numReviews:10\n    },\n    {\n        _id:'2',\n        name: 'Large Shirt',\n        category:'Shirts',\n        image:'/images/d1.jpeg',\n        price:70,\n        brand:'Gucci',\n        rating:3.2,\n        numReviews:10\n    },\n    {\n        _id:'3',\n        name: 'Slim Shirt',\n        category:'pants',\n        image:'/images/d1.jpeg',\n        price:60,\n        brand:'Nike',\n        rating:4.2,\n        numReviews:10\n    }\n]\n}","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport data from '../data';\nfunction ProductScreen(props){\n    console.log(props.match.params.id)\n    const product = data.products.find(x=>x._id===props.match.params.id);\n    return <div>\n        <div className=\"back-to-result\"></div>\n        <div>\n            <Link to=\"/\">Back to result</Link>\n        </div>\n        <div className=\"details\">\n            <div className=\"details-image\">\n                <img src={product.image} alt=\"product\"></img>\n            </div>\n            <div className=\"details-info\">\n                <ul>\n                    <li>\n                        <h4>{product.name}</h4>\n                    </li>\n                    <li>\n                        {product.rating} Stars ({product.numReviews} Reviews)\n                    </li>\n                    <li>\n                        <b>{product.price}</b>\n                    </li>\n                    <li>\n                        Description\n                        <div>\n                            {product.description}\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"details-action\">\n                <ul>\n                    <li>\n                        Price:<b>${product.price}</b>\n                    </li>\n                    <li>\n                        Status:{product.status}\n                    </li>\n                    <li>\n                        Qty:<select>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </select>\n                    </li>\n                    <li>\n                        <button className=\"button\">Add to cart</button>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n}\nexport default ProductScreen;","import React from 'react';\nimport {BrowserRouter,Route, Link} from 'react-router-dom'\nimport './App.css';\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductScreen from './Screens/ProductScreen'\n\nfunction App() {\n  const openMenu=()=>{\n    document.querySelector(\".sidebar\").classList.add(\"open\")\n  }\n  const closeMenu=()=>{\n    document.querySelector(\".sidebar\").classList.remove(\"open\")\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n      <header className=\"header\">\n        <div className=\"brand\">\n          <button onClick={openMenu}>\n            &#9776;\n          </button>\n          <Link to= \"/\">amazona</Link>\n        </div>\n        <div className=\"header-links\">\n          <a href=\"cart.html\">Cart</a>\n          <a href=\"signin.html\">Sign In</a>\n        </div>\n      </header>\n      <aside className=\"sidebar\">\n        <h3>Shopping Categories</h3>\n        <button className=\"sidebar-close-button\" onClick={closeMenu}>x</button>\n        <ul>\n          <li>\n            <a href=\"index.html\">Pants</a>\n          </li>\n\n          <li>\n            <a href=\"index.html\">Shirts</a>\n          </li>\n\n        </ul>\n      </aside>\n      <main className=\"main\">\n        <div className=\"content\">\n          <Route path=\"/product/:id\" component={ProductScreen}/>\n          <Route path=\"/\" exact={true} component={HomeScreen}/>\n        </div>\n\n      </main>\n      <footer className=\"footer\">\n        All right reserved.\n      </footer>\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}